// Mixins

// Ye olde clearfix
@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin notch($where:'top', $color:$white) {
  &:before {
    content: '';
    position: absolute;
    #{$where}: 0;
    width: 10px;
    border-top: 2px solid $color;
  }
}
@mixin hr-above() {
  position: relative;
  &::before {
    content: '';
    position: absolute;
    top: 0;
    width: 100%;
    border-bottom: 1px solid $black;

    // Desktop hr goes offscreen
    @include media-md {
      width: 1000em;
    }
  }
}

// Smooth text
%smooth {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin theme-color($property, $default, $map: 'primary') {
  $theme-map: '.theme-yellow' $yellow, '.theme-red' $red;
  @if ($map == 'accent') {
    $theme-map: '.theme-yellow' $black, '.theme-red' $white;
  } @elseif ($map == 'accent2') {
    $theme-map: '.theme-yellow' $red, '.theme-red' $yellow;
  }

  #{$property}: $default;
  $selector: &;

  // Loop through all schemes
  @each $color-scheme in $theme-map {
      $color-scheme-class: nth($color-scheme, 1);
      $color-scheme-color: nth($color-scheme, 2);

    // Prepend color-scheme selectors
    @at-root body#{$color-scheme-class} {
      // Apply rule
      #{$selector} {
        #{$property}: $color-scheme-color;
      }
    }
  }
}

// Aspect ratio padding mixin
@mixin aspect-ratio($width, $height) {
  background-size: cover;
  background-position: top center;
  position: relative;
  height: 0;
  padding-top: #{$height / $width * 100%}; // aspect ratio
}

// Various floating bars
@mixin bar($position, $color, $parent_num_columns, $before_or_after:"after") {
  @if $position == 'left' {
    $before_or_after: 'before';
  }
  &::#{$before_or_after} {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    #{$position}: -#{$column-width * 1 * 20 / $parent_num_columns};
    width: #{$column-width * 1 * 20 / $parent_num_columns};
    height: 100%;
    background: #{$color};
  }
}

@mixin hr() {
  &::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    height: 0;
    border-top: 1px solid $black;
    width: 100%;

    // Desktop hr goes offscreen
    @include media-md {
      width: 1000em;
    }
  }
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() {
  @media screen and (max-width: $breakpoint-sm - 1) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}
@mixin media-nav() {
  @media screen and (min-width: $breakpoint-nav) {
    @content;
  }
}
@mixin media-xl() {
  @media screen and (min-width: $breakpoint-xl) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res - 1px) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}
